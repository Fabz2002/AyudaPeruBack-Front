package com.ayudaperu.app.controllers;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ayudaperu.app.exceptions.ResourceNotFoundException;
import com.ayudaperu.app.models.Donacion;
import com.ayudaperu.app.models.DonacionM;
import com.ayudaperu.app.repository.DonacionMRepository;
import com.ayudaperu.app.repository.DonacionNMRepository;
import com.ayudaperu.app.repository.DonacionRepository;

@RestController
@RequestMapping("/api/v1")
@CrossOrigin(origins="http://localhost:4200/")
public class DonacionController {
	
	@Autowired
	private DonacionRepository repository;
	@Autowired
	private DonacionMRepository repositoryM;
	@Autowired
	private DonacionNMRepository repositoryNM;
	
	//Listar todas las donaciones
	@GetMapping("/donaciones")
	public List<Donacion> listarDonaciones(){
		return repository.findAll();
	}
	//Guardar y Editar donacion
	@PostMapping("/donacionM")
	public Donacion guardarDonacion(@RequestBody Donacion donacion) {
		DonacionM resultM= repositoryM.save(donacion.getDonacionM());
		return repository.save(donacion);
	}
	
	//Método para buscar donacion
	@GetMapping("/donaciones/{id}")
	public ResponseEntity<Donacion>obtenerDonacion(@PathVariable Long id){
		Donacion donacion = repository.findById(id)
			.orElseThrow(()->new ResourceNotFoundException("No existe la donación con el Id: " + id));
		return ResponseEntity.ok(donacion);
	}
	
	//Método para eliminar donacion
	@DeleteMapping("/donacion/{id}")
	public ResponseEntity<Map<String,Boolean>> eliminarDonacion(@PathVariable Long id){
		Donacion donacion = repository.findById(id)
				.orElseThrow(()->new ResourceNotFoundException("No existe la donación con el Id: "+id));
		repository.delete(donacion);
		Map<String, Boolean> respuesta = new HashMap<>();
		respuesta.put("eliminar",Boolean.TRUE);
		return ResponseEntity.ok(respuesta);
	}
}